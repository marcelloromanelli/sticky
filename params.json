{"name":"Sticky","tagline":"jQuery Plugin for Sticky Objects","body":"# Sticky\r\n\r\nSticky is a jQuery plugin that gives you the ability to make any element on your page always stay visible.\r\n\r\n## Sticky in brief\r\n\r\nThis is how it works:\r\n\r\n- When the target element is about to be hidden, the plugin will add the class `className` to it (and to a wrapper added as its parent), set it to `position: fixed` and calculate its new `top`, based on the element's height, the page height and the `topSpacing` and `bottomSpacing` options.\r\n- That's it. \r\nIn some cases you might need to set a fixed width to your element when it is \"sticked\".\r\nBut by default (`widthFromWrapper == true`) sticky updates elements's width to the wrapper's width.\r\nCheck the `example-*.html` files for some examples.\r\n\r\n## Usage\r\n\r\n- Include jQuery & Sticky.\r\n- Call Sticky.\r\n\r\n```html\r\n<script src=\"jquery.js\"></script>\r\n<script src=\"jquery.sticky.js\"></script>\r\n<script>\r\n  $(document).ready(function(){\r\n    $(\"#sticker\").sticky({topSpacing:0});\r\n  });\r\n</script>\r\n```\r\n\r\n- Edit your css to position the elements (check the examples in `example-*.html`).\r\n\r\n- To unstick an object\r\n\r\n```html\r\n<script>\r\n  $(\"#sticker\").unstick();\r\n</script>\r\n```\r\n\r\n## Options\r\n\r\n- `topSpacing`: Pixels between the page top and the element's top.\r\n- `bottomSpacing`: Pixels between the page bottom and the element's bottom.\r\n- `className`: CSS class added to the element's wrapper when \"sticked\".\r\n- `wrapperClassName`: CSS class added to the wrapper.\r\n- `getWidthFrom`: Selector of element referenced to set fixed width of \"sticky\" element.\r\n- `widthFromWrapper`: boolean determining whether width of the \"sticky\" element should be updated to match the wrapper's width. Wrapper is a placeholder for \"sticky\" element while it is fixed (out of static elements flow), and it's width depends on the context and CSS rules.\r\n- `responsiveWidth`: boolean determining whether widths will be recalculated on window resize (using getWidthfrom).\r\n- `heightCheck`: boolean determining whether the element is allowed to sticky when it doesn't fit in the viewport\r\n- `horizontalScroll`: boolean determining whether the element is allowed to scroll horizontally when fixed\r\n\r\n## Methods\r\n\r\n- `sticky(options)`: Initializer. `options` is optional.\r\n- `sticky('update')`: Recalculates the element's position.\r\n- `sticky('height')`: Recalculates the height of the element's wrapper.\r\n\r\n## Events\r\n\r\n- `sticky-start`: When the element becomes sticky.\r\n- `sticky-end`: When the element returns to its original location\r\n- `sticky-update`: When the element is sticked but position must be updated for constraints reasons\r\n- `sticky-bottom-reached`: When the element reached the bottom space limit\r\n- `sticky-bottom-unreached`: When the element unreached the bottom space limit\r\n\r\nTo subscribe to events use jquery:\r\n\r\n```html\r\n<script>\r\n  $('#sticker').on('sticky-start', function() { console.log(\"Started\"); });\r\n  $('#sticker').on('sticky-end', function() { console.log(\"Ended\"); });\r\n  $('#sticker').on('sticky-update', function() { console.log(\"Update\"); });\r\n  $('#sticker').on('sticky-bottom-reached', function() { console.log(\"Bottom reached\"); });\r\n  $('#sticker').on('sticky-botton-unreached', function() { console.log(\"Bottom unreached\"); });\r\n</script>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}